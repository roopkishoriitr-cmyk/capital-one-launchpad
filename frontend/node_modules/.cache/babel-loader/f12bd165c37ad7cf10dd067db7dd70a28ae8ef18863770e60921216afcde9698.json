{"ast":null,"code":"import _objectSpread from\"/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Check for stored user data on app load\nconst storedUser=localStorage.getItem('krishisampann_user');if(storedUser){try{const userData=JSON.parse(storedUser);setUser(userData);}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('krishisampann_user');}}setIsLoading(false);},[]);const login=async(phoneNumber,name,language,state,district,village,landArea)=>{try{setIsLoading(true);// Check if user exists\nconst response=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/users/phone/\").concat(phoneNumber));if(response.data){// User exists, update with new data\nconst updatedUser=await axios.put(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/users/\").concat(response.data.id),{name,language,state,district,village,land_area:landArea});setUser(updatedUser.data);localStorage.setItem('krishisampann_user',JSON.stringify(updatedUser.data));}else{// User doesn't exist, create new user\nconst newUser=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/users/register\"),{phone_number:phoneNumber,name,language,state,district,village,land_area:landArea});setUser(newUser.data);localStorage.setItem('krishisampann_user',JSON.stringify(newUser.data));}}catch(error){console.error('Login error:',error);throw error;}finally{setIsLoading(false);}};const register=async userData=>{try{setIsLoading(true);const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/users/register\"),userData);setUser(response.data);localStorage.setItem('krishisampann_user',JSON.stringify(response.data));}catch(error){console.error('Registration error:',error);throw error;}finally{setIsLoading(false);}};const updateUser=async userData=>{if(!user)throw new Error('No user logged in');try{setIsLoading(true);const response=await axios.put(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/users/\").concat(user.id),userData);const updatedUser=_objectSpread(_objectSpread({},user),response.data);setUser(updatedUser);localStorage.setItem('krishisampann_user',JSON.stringify(updatedUser));}catch(error){console.error('Update user error:',error);throw error;}finally{setIsLoading(false);}};const logout=()=>{setUser(null);localStorage.removeItem('krishisampann_user');};const value={user,isAuthenticated:!!user,isLoading,login,logout,register,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","storedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","phoneNumber","name","language","state","district","village","landArea","response","get","concat","process","env","REACT_APP_API_URL","data","updatedUser","put","id","land_area","setItem","stringify","newUser","post","phone_number","register","updateUser","_objectSpread","logout","value","isAuthenticated","Provider"],"sources":["/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  phone_number: string;\n  name: string;\n  language: string;\n  state: string;\n  district: string;\n  village: string;\n  land_area: number;\n  created_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (phoneNumber: string, name: string, language: string, state: string, district: string, village: string, landArea: number) => Promise<void>;\n  logout: () => void;\n  register: (userData: Omit<User, 'id' | 'created_at'>) => Promise<void>;\n  updateUser: (userData: Partial<User>) => Promise<void>;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored user data on app load\n    const storedUser = localStorage.getItem('krishisampann_user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('krishisampann_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (\n    phoneNumber: string,\n    name: string,\n    language: string,\n    state: string,\n    district: string,\n    village: string,\n    landArea: number\n  ) => {\n    try {\n      setIsLoading(true);\n      \n      // Check if user exists\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/users/phone/${phoneNumber}`);\n      \n      if (response.data) {\n        // User exists, update with new data\n        const updatedUser = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${response.data.id}`, {\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        \n        setUser(updatedUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser.data));\n      } else {\n        // User doesn't exist, create new user\n        const newUser = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, {\n          phone_number: phoneNumber,\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        \n        setUser(newUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(newUser.data));\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: Omit<User, 'id' | 'created_at'>) => {\n    try {\n      setIsLoading(true);\n      \n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, userData);\n      \n      setUser(response.data);\n      localStorage.setItem('krishisampann_user', JSON.stringify(response.data));\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateUser = async (userData: Partial<User>) => {\n    if (!user) throw new Error('No user logged in');\n    \n    try {\n      setIsLoading(true);\n      \n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${user.id}`, userData);\n      \n      const updatedUser = { ...user, ...response.data };\n      setUser(updatedUser);\n      localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser));\n    } catch (error) {\n      console.error('Update user error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('krishisampann_user');\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    register,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}