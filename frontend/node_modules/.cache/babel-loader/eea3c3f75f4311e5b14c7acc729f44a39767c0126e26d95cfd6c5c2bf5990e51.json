{"ast":null,"code":"var _jsxFileName = \"/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/ChatContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext(undefined);\nexport const useChat = () => {\n  _s();\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n_s(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ChatProvider = ({\n  children\n}) => {\n  _s2();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const wsRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n\n  // Mock AI responses for demonstration\n  const mockAIResponses = {\n    'crop advice': '‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§î‡§∞ ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞, ‡§á‡§∏ ‡§∏‡•Ä‡§ú‡§® ‡§Æ‡•á‡§Ç ‡§ó‡•á‡§π‡•Ç‡§Ç, ‡§∏‡§∞‡§∏‡•ã‡§Ç ‡§Ø‡§æ ‡§ö‡§®‡§æ ‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§∞‡§π‡•á‡§ó‡•Ä‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§',\n    'loan help': '‡§ï‡•É‡§∑‡§ø ‡§ã‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™ PM-Kisan ‡§Ø‡•ã‡§ú‡§®‡§æ, KCC ‡§ï‡§æ‡§∞‡•ç‡§° ‡§Ø‡§æ ‡§¨‡•à‡§Ç‡§ï ‡§ã‡§£ ‡§ï‡§æ ‡§≤‡§æ‡§≠ ‡§â‡§†‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',\n    'market prices': '‡§Ü‡§ú ‡§ï‡•á ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ: ‡§ó‡•á‡§π‡•Ç‡§Ç ‚Çπ2,100-2,300/quintal, ‡§ß‡§æ‡§® ‚Çπ1,800-2,000/quintal, ‡§Æ‡§ï‡•ç‡§ï‡§æ ‚Çπ1,500-1,700/quintal‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§´‡§∏‡§≤ ‡§ï‡§æ ‡§≠‡§æ‡§µ ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',\n    'risk alert': '‡§Ü‡§™‡§ï‡•á ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§ó‡§≤‡•á 3 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§π‡•à‡•§ ‡§´‡§∏‡§≤ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§ö‡§ø‡§§ ‡§â‡§™‡§æ‡§Ø ‡§ï‡§∞‡•á‡§Ç‡•§',\n    'farming calendar': '‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è: ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§¨‡•Å‡§µ‡§æ‡§à ‡§ï‡§æ ‡§∏‡§π‡•Ä ‡§∏‡§Æ‡§Ø ‡§π‡•à, ‡§∏‡§∞‡§∏‡•ã‡§Ç ‡§ï‡•Ä ‡§ï‡§ü‡§æ‡§à ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§®‡§à ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç‡•§',\n    'local schemes': '‡§Ü‡§™‡§ï‡•á ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç: ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§°, ‡§´‡§∏‡§≤ ‡§¨‡•Ä‡§Æ‡§æ, ‡§î‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?'\n  };\n  useEffect(() => {\n    // Add welcome message when component mounts\n    addMessage({\n      id: Date.now().toString(),\n      text: `‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${(user === null || user === void 0 ? void 0 : user.name) || '‡§ï‡§ø‡§∏‡§æ‡§®'}! ‡§Æ‡•à‡§Ç KrishiMitra ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç? ‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§™‡•Ç‡§õ‡•á‡§Ç - ‡§´‡§∏‡§≤, ‡§ã‡§£, ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ, ‡§Æ‡•å‡§∏‡§Æ ‡§Ø‡§æ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç‡•§`,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'system',\n      metadata: {\n        voice_ready: [`‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${(user === null || user === void 0 ? void 0 : user.name) || '‡§ï‡§ø‡§∏‡§æ‡§®'}! ‡§Æ‡•à‡§Ç KrishiMitra ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?`, \"‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§™‡•Ç‡§õ‡•á‡§Ç - ‡§´‡§∏‡§≤, ‡§ã‡§£, ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ, ‡§Æ‡•å‡§∏‡§Æ ‡§Ø‡§æ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç‡•§\"],\n        intent: 'welcome',\n        suggestions: ['‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§≤‡•á‡§Ç', '‡§ã‡§£ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≤‡•á‡§Ç', '‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ ‡§ú‡§æ‡§®‡•á‡§Ç', '‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≤‡•á‡§Ç']\n      }\n    });\n  }, []); // Only run once on mount\n\n  useEffect(() => {\n    // Only try to connect if we have a user or are in anonymous mode\n    if (user || true) {\n      // Always try to connect, even anonymously\n      console.log('Attempting WebSocket connection...');\n      connectWebSocket();\n    } else {\n      console.log('No user available, using mock responses');\n    }\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      if (wsRef.current) {\n        // Only close if the connection is actually open or connecting\n        if (wsRef.current.readyState === WebSocket.OPEN || wsRef.current.readyState === WebSocket.CONNECTING) {\n          wsRef.current.close(1000, 'Component unmounting');\n        }\n      }\n    };\n  }, []); // Remove user dependency to prevent reconnection loops\n\n  const connectWebSocket = () => {\n    try {\n      // Close existing connection if any\n      if (wsRef.current) {\n        if (wsRef.current.readyState === WebSocket.OPEN || wsRef.current.readyState === WebSocket.CONNECTING) {\n          console.log('Closing existing WebSocket connection...');\n          wsRef.current.close(1000, 'Reconnecting');\n        }\n      }\n      const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:8000/ws';\n      const clientId = (user === null || user === void 0 ? void 0 : user.id) || 'anonymous';\n      console.log(`Connecting to WebSocket: ${wsUrl}/${clientId}`);\n      wsRef.current = new WebSocket(`${wsUrl}/${clientId}`);\n      wsRef.current.onopen = () => {\n        console.log('‚úÖ WebSocket connected successfully');\n        setIsConnected(true);\n      };\n      wsRef.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('üì® WebSocket message received:', data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('‚ùå Error parsing WebSocket message:', error);\n        }\n      };\n      wsRef.current.onclose = event => {\n        console.log(`üîå WebSocket disconnected - Code: ${event.code}, Reason: ${event.reason}`);\n        setIsConnected(false);\n\n        // Only attempt to reconnect if it wasn't a clean close\n        if (event.code !== 1000) {\n          console.log('üîÑ Attempting to reconnect in 3 seconds...');\n          setTimeout(() => {\n            var _wsRef$current;\n            if (((_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.readyState) === WebSocket.CLOSED) {\n              connectWebSocket();\n            }\n          }, 3000);\n        }\n      };\n      wsRef.current.onerror = error => {\n        console.error('‚ùå WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('‚ùå Error connecting to WebSocket:', error);\n      setIsConnected(false);\n    }\n  };\n  const handleWebSocketMessage = data => {\n    // Handle KrishiMitra response format\n    if (data.text) {\n      addMessage({\n        id: Date.now().toString(),\n        text: data.text,\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'text',\n        metadata: {\n          language: data.language,\n          confidence: data.confidence,\n          voice_ready: data.voice_ready,\n          intent: data.intent,\n          suggestions: data.suggestions\n        }\n      });\n    } else if (data.type === 'error') {\n      addMessage({\n        id: Date.now().toString(),\n        text: '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    }\n  };\n  const addMessage = message => {\n    setMessages(prev => [...prev, message]);\n  };\n  const sendMessage = async (text, language) => {\n    if (!text.trim()) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: {\n        language\n      }\n    };\n    addMessage(userMessage);\n    setIsLoading(true);\n    try {\n      // Try WebSocket first if available\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          message: text,\n          language,\n          user_id: user === null || user === void 0 ? void 0 : user.id\n        }));\n      } else {\n        // Fallback to mock responses\n        await sendMockResponse(text, language);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      addMessage({\n        id: (Date.now() + 1).toString(),\n        text: '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const sendMockResponse = async (text, language) => {\n    // Simulate KrishiMitra processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n    // Generate contextual response\n    let response = '';\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('crop') || lowerText.includes('‡§´‡§∏‡§≤')) {\n      response = mockAIResponses['crop advice'];\n    } else if (lowerText.includes('loan') || lowerText.includes('‡§ã‡§£') || lowerText.includes('‡§ï‡§∞‡•ç‡§ú')) {\n      response = mockAIResponses['loan help'];\n    } else if (lowerText.includes('market') || lowerText.includes('‡§Æ‡§Ç‡§°‡•Ä') || lowerText.includes('‡§≠‡§æ‡§µ')) {\n      response = mockAIResponses['market prices'];\n    } else if (lowerText.includes('risk') || lowerText.includes('‡§ú‡•ã‡§ñ‡§ø‡§Æ') || lowerText.includes('‡§Æ‡•å‡§∏‡§Æ')) {\n      response = mockAIResponses['risk alert'];\n    } else if (lowerText.includes('calendar') || lowerText.includes('‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞')) {\n      response = mockAIResponses['farming calendar'];\n    } else if (lowerText.includes('scheme') || lowerText.includes('‡§Ø‡•ã‡§ú‡§®‡§æ')) {\n      response = mockAIResponses['local schemes'];\n    } else {\n      // Generic response\n      response = '‡§Ü‡§™‡§ï‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?';\n    }\n    addMessage({\n      id: Date.now().toString(),\n      text: response,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: {\n        language\n      }\n    });\n  };\n  const sendMessageViaAPI = async (text, language) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/chat/send`, {\n        message: text,\n        language,\n        user_id: user === null || user === void 0 ? void 0 : user.id\n      });\n      if (response.data.success) {\n        addMessage({\n          id: Date.now().toString(),\n          text: response.data.response,\n          sender: 'ai',\n          timestamp: new Date(),\n          type: 'text',\n          metadata: {\n            language\n          }\n        });\n      }\n    } catch (error) {\n      console.error('API call failed:', error);\n      throw error;\n    }\n  };\n  const clearMessages = () => {\n    setMessages([]);\n  };\n  const value = {\n    messages,\n    isLoading,\n    sendMessage,\n    clearMessages,\n    isConnected\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChatProvider, \"n9hKZX9K/InydiuuV0eEVZXZlbI=\", false, function () {\n  return [useAuth];\n});\n_c = ChatProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","useAuth","jsxDEV","_jsxDEV","ChatContext","undefined","useChat","_s","context","Error","ChatProvider","children","_s2","messages","setMessages","isLoading","setIsLoading","isConnected","setIsConnected","wsRef","user","mockAIResponses","addMessage","id","Date","now","toString","text","name","sender","timestamp","type","metadata","voice_ready","intent","suggestions","console","log","connectWebSocket","current","readyState","WebSocket","OPEN","CONNECTING","close","wsUrl","process","env","REACT_APP_WS_URL","clientId","onopen","onmessage","event","data","JSON","parse","handleWebSocketMessage","error","onclose","code","reason","setTimeout","_wsRef$current","CLOSED","onerror","language","confidence","message","prev","sendMessage","trim","userMessage","send","stringify","user_id","sendMockResponse","Promise","resolve","Math","random","response","lowerText","toLowerCase","includes","sendMessageViaAPI","post","REACT_APP_API_URL","success","clearMessages","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/ChatContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef, ReactNode } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'ai';\n  timestamp: Date;\n  type: 'text' | 'voice' | 'system';\n  metadata?: {\n    language?: string;\n    confidence?: number;\n    audioUrl?: string;\n    voice_ready?: string[];\n    intent?: string;\n    suggestions?: string[];\n  };\n}\n\ninterface ChatContextType {\n  messages: Message[];\n  isLoading: boolean;\n  sendMessage: (text: string, language: string) => Promise<void>;\n  clearMessages: () => void;\n  isConnected: boolean;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport const ChatProvider: React.FC<ChatProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const wsRef = useRef<WebSocket | null>(null);\n  const { user } = useAuth();\n\n  // Mock AI responses for demonstration\n  const mockAIResponses = {\n    'crop advice': '‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§î‡§∞ ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞, ‡§á‡§∏ ‡§∏‡•Ä‡§ú‡§® ‡§Æ‡•á‡§Ç ‡§ó‡•á‡§π‡•Ç‡§Ç, ‡§∏‡§∞‡§∏‡•ã‡§Ç ‡§Ø‡§æ ‡§ö‡§®‡§æ ‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§∞‡§π‡•á‡§ó‡•Ä‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§',\n    'loan help': '‡§ï‡•É‡§∑‡§ø ‡§ã‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™ PM-Kisan ‡§Ø‡•ã‡§ú‡§®‡§æ, KCC ‡§ï‡§æ‡§∞‡•ç‡§° ‡§Ø‡§æ ‡§¨‡•à‡§Ç‡§ï ‡§ã‡§£ ‡§ï‡§æ ‡§≤‡§æ‡§≠ ‡§â‡§†‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',\n    'market prices': '‡§Ü‡§ú ‡§ï‡•á ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ: ‡§ó‡•á‡§π‡•Ç‡§Ç ‚Çπ2,100-2,300/quintal, ‡§ß‡§æ‡§® ‚Çπ1,800-2,000/quintal, ‡§Æ‡§ï‡•ç‡§ï‡§æ ‚Çπ1,500-1,700/quintal‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§´‡§∏‡§≤ ‡§ï‡§æ ‡§≠‡§æ‡§µ ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',\n    'risk alert': '‡§Ü‡§™‡§ï‡•á ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§ó‡§≤‡•á 3 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§π‡•à‡•§ ‡§´‡§∏‡§≤ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§ö‡§ø‡§§ ‡§â‡§™‡§æ‡§Ø ‡§ï‡§∞‡•á‡§Ç‡•§',\n    'farming calendar': '‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è: ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§¨‡•Å‡§µ‡§æ‡§à ‡§ï‡§æ ‡§∏‡§π‡•Ä ‡§∏‡§Æ‡§Ø ‡§π‡•à, ‡§∏‡§∞‡§∏‡•ã‡§Ç ‡§ï‡•Ä ‡§ï‡§ü‡§æ‡§à ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§®‡§à ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç‡•§',\n    'local schemes': '‡§Ü‡§™‡§ï‡•á ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç: ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§°, ‡§´‡§∏‡§≤ ‡§¨‡•Ä‡§Æ‡§æ, ‡§î‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?'\n  };\n\n  useEffect(() => {\n    // Add welcome message when component mounts\n    addMessage({\n      id: Date.now().toString(),\n      text: `‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${user?.name || '‡§ï‡§ø‡§∏‡§æ‡§®'}! ‡§Æ‡•à‡§Ç KrishiMitra ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç? ‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§™‡•Ç‡§õ‡•á‡§Ç - ‡§´‡§∏‡§≤, ‡§ã‡§£, ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ, ‡§Æ‡•å‡§∏‡§Æ ‡§Ø‡§æ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç‡•§`,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'system',\n      metadata: {\n        voice_ready: [`‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${user?.name || '‡§ï‡§ø‡§∏‡§æ‡§®'}! ‡§Æ‡•à‡§Ç KrishiMitra ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?`, \"‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§™‡•Ç‡§õ‡•á‡§Ç - ‡§´‡§∏‡§≤, ‡§ã‡§£, ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ, ‡§Æ‡•å‡§∏‡§Æ ‡§Ø‡§æ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç‡•§\"],\n        intent: 'welcome',\n        suggestions: ['‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§≤‡•á‡§Ç', '‡§ã‡§£ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≤‡•á‡§Ç', '‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ ‡§ú‡§æ‡§®‡•á‡§Ç', '‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≤‡•á‡§Ç']\n      }\n    });\n  }, []); // Only run once on mount\n\n  useEffect(() => {\n    // Only try to connect if we have a user or are in anonymous mode\n    if (user || true) { // Always try to connect, even anonymously\n      console.log('Attempting WebSocket connection...');\n      connectWebSocket();\n    } else {\n      console.log('No user available, using mock responses');\n    }\n\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      if (wsRef.current) {\n        // Only close if the connection is actually open or connecting\n        if (wsRef.current.readyState === WebSocket.OPEN || wsRef.current.readyState === WebSocket.CONNECTING) {\n          wsRef.current.close(1000, 'Component unmounting');\n        }\n      }\n    };\n  }, []); // Remove user dependency to prevent reconnection loops\n\n  const connectWebSocket = () => {\n    try {\n      // Close existing connection if any\n      if (wsRef.current) {\n        if (wsRef.current.readyState === WebSocket.OPEN || wsRef.current.readyState === WebSocket.CONNECTING) {\n          console.log('Closing existing WebSocket connection...');\n          wsRef.current.close(1000, 'Reconnecting');\n        }\n      }\n\n      const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:8000/ws';\n      const clientId = user?.id || 'anonymous';\n      \n      console.log(`Connecting to WebSocket: ${wsUrl}/${clientId}`);\n      wsRef.current = new WebSocket(`${wsUrl}/${clientId}`);\n      \n      wsRef.current.onopen = () => {\n        console.log('‚úÖ WebSocket connected successfully');\n        setIsConnected(true);\n      };\n      \n      wsRef.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('üì® WebSocket message received:', data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('‚ùå Error parsing WebSocket message:', error);\n        }\n      };\n      \n      wsRef.current.onclose = (event) => {\n        console.log(`üîå WebSocket disconnected - Code: ${event.code}, Reason: ${event.reason}`);\n        setIsConnected(false);\n        \n        // Only attempt to reconnect if it wasn't a clean close\n        if (event.code !== 1000) {\n          console.log('üîÑ Attempting to reconnect in 3 seconds...');\n          setTimeout(() => {\n            if (wsRef.current?.readyState === WebSocket.CLOSED) {\n              connectWebSocket();\n            }\n          }, 3000);\n        }\n      };\n      \n      wsRef.current.onerror = (error) => {\n        console.error('‚ùå WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('‚ùå Error connecting to WebSocket:', error);\n      setIsConnected(false);\n    }\n  };\n\n  const handleWebSocketMessage = (data: any) => {\n    // Handle KrishiMitra response format\n    if (data.text) {\n      addMessage({\n        id: Date.now().toString(),\n        text: data.text,\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'text',\n        metadata: {\n          language: data.language,\n          confidence: data.confidence,\n          voice_ready: data.voice_ready,\n          intent: data.intent,\n          suggestions: data.suggestions\n        }\n      });\n    } else if (data.type === 'error') {\n      addMessage({\n        id: Date.now().toString(),\n        text: '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    }\n  };\n\n  const addMessage = (message: Message) => {\n    setMessages(prev => [...prev, message]);\n  };\n\n  const sendMessage = async (text: string, language: string) => {\n    if (!text.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: { language }\n    };\n\n    addMessage(userMessage);\n    setIsLoading(true);\n\n    try {\n      // Try WebSocket first if available\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          message: text,\n          language,\n          user_id: user?.id\n        }));\n      } else {\n        // Fallback to mock responses\n        await sendMockResponse(text, language);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message\n      addMessage({\n        id: (Date.now() + 1).toString(),\n        text: '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sendMockResponse = async (text: string, language: string) => {\n    // Simulate KrishiMitra processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n    \n    // Generate contextual response\n    let response = '';\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crop') || lowerText.includes('‡§´‡§∏‡§≤')) {\n      response = mockAIResponses['crop advice'];\n    } else if (lowerText.includes('loan') || lowerText.includes('‡§ã‡§£') || lowerText.includes('‡§ï‡§∞‡•ç‡§ú')) {\n      response = mockAIResponses['loan help'];\n    } else if (lowerText.includes('market') || lowerText.includes('‡§Æ‡§Ç‡§°‡•Ä') || lowerText.includes('‡§≠‡§æ‡§µ')) {\n      response = mockAIResponses['market prices'];\n    } else if (lowerText.includes('risk') || lowerText.includes('‡§ú‡•ã‡§ñ‡§ø‡§Æ') || lowerText.includes('‡§Æ‡•å‡§∏‡§Æ')) {\n      response = mockAIResponses['risk alert'];\n    } else if (lowerText.includes('calendar') || lowerText.includes('‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞')) {\n      response = mockAIResponses['farming calendar'];\n    } else if (lowerText.includes('scheme') || lowerText.includes('‡§Ø‡•ã‡§ú‡§®‡§æ')) {\n      response = mockAIResponses['local schemes'];\n    } else {\n      // Generic response\n      response = '‡§Ü‡§™‡§ï‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?';\n    }\n    \n    addMessage({\n      id: Date.now().toString(),\n      text: response,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: { language }\n    });\n  };\n\n  const sendMessageViaAPI = async (text: string, language: string) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/chat/send`, {\n        message: text,\n        language,\n        user_id: user?.id\n      });\n      \n      if (response.data.success) {\n        addMessage({\n          id: Date.now().toString(),\n          text: response.data.response,\n          sender: 'ai',\n          timestamp: new Date(),\n          type: 'text',\n          metadata: { language }\n        });\n      }\n    } catch (error) {\n      console.error('API call failed:', error);\n      throw error;\n    }\n  };\n\n  const clearMessages = () => {\n    setMessages([]);\n  };\n\n  const value: ChatContextType = {\n    messages,\n    isLoading,\n    sendMessage,\n    clearMessages,\n    isConnected\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAmB,OAAO;AAChG,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA0BxC,MAAMC,WAAW,gBAAGT,aAAa,CAA8BU,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGZ,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMsB,KAAK,GAAGpB,MAAM,CAAmB,IAAI,CAAC;EAC5C,MAAM;IAAEqB;EAAK,CAAC,GAAGnB,OAAO,CAAC,CAAC;;EAE1B;EACA,MAAMoB,eAAe,GAAG;IACtB,aAAa,EAAE,2HAA2H;IAC1I,WAAW,EAAE,mIAAmI;IAChJ,eAAe,EAAE,kJAAkJ;IACnK,YAAY,EAAE,2FAA2F;IACzG,kBAAkB,EAAE,gGAAgG;IACpH,eAAe,EAAE;EACnB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd;IACAwB,UAAU,CAAC;MACTC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,IAAI,EAAE,UAAU,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI,KAAI,OAAO,6HAA6H;MAClKC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;MACrBO,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;QACRC,WAAW,EAAE,CAAC,UAAU,CAAAb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI,KAAI,OAAO,8CAA8C,EAAE,gFAAgF,CAAC;QAC9KM,MAAM,EAAE,SAAS;QACjBC,WAAW,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,qBAAqB;MAC/F;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERrC,SAAS,CAAC,MAAM;IACd;IACA,IAAIsB,IAAI,IAAI,IAAI,EAAE;MAAE;MAClBgB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDC,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD;IAEA,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD,IAAIlB,KAAK,CAACoB,OAAO,EAAE;QACjB;QACA,IAAIpB,KAAK,CAACoB,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,IAAIvB,KAAK,CAACoB,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACE,UAAU,EAAE;UACpGxB,KAAK,CAACoB,OAAO,CAACK,KAAK,CAAC,IAAI,EAAE,sBAAsB,CAAC;QACnD;MACF;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMN,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI;MACF;MACA,IAAInB,KAAK,CAACoB,OAAO,EAAE;QACjB,IAAIpB,KAAK,CAACoB,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,IAAIvB,KAAK,CAACoB,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACE,UAAU,EAAE;UACpGP,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvDlB,KAAK,CAACoB,OAAO,CAACK,KAAK,CAAC,IAAI,EAAE,cAAc,CAAC;QAC3C;MACF;MAEA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,wBAAwB;MACtE,MAAMC,QAAQ,GAAG,CAAA7B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,EAAE,KAAI,WAAW;MAExCa,OAAO,CAACC,GAAG,CAAC,4BAA4BQ,KAAK,IAAII,QAAQ,EAAE,CAAC;MAC5D9B,KAAK,CAACoB,OAAO,GAAG,IAAIE,SAAS,CAAC,GAAGI,KAAK,IAAII,QAAQ,EAAE,CAAC;MAErD9B,KAAK,CAACoB,OAAO,CAACW,MAAM,GAAG,MAAM;QAC3Bd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjDnB,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MAEDC,KAAK,CAACoB,OAAO,CAACY,SAAS,GAAIC,KAAK,IAAK;QACnC,IAAI;UACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;UACnCjB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEgB,IAAI,CAAC;UACnDG,sBAAsB,CAACH,IAAI,CAAC;QAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdrB,OAAO,CAACqB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC5D;MACF,CAAC;MAEDtC,KAAK,CAACoB,OAAO,CAACmB,OAAO,GAAIN,KAAK,IAAK;QACjChB,OAAO,CAACC,GAAG,CAAC,qCAAqCe,KAAK,CAACO,IAAI,aAAaP,KAAK,CAACQ,MAAM,EAAE,CAAC;QACvF1C,cAAc,CAAC,KAAK,CAAC;;QAErB;QACA,IAAIkC,KAAK,CAACO,IAAI,KAAK,IAAI,EAAE;UACvBvB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;UACzDwB,UAAU,CAAC,MAAM;YAAA,IAAAC,cAAA;YACf,IAAI,EAAAA,cAAA,GAAA3C,KAAK,CAACoB,OAAO,cAAAuB,cAAA,uBAAbA,cAAA,CAAetB,UAAU,MAAKC,SAAS,CAACsB,MAAM,EAAE;cAClDzB,gBAAgB,CAAC,CAAC;YACpB;UACF,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAEDnB,KAAK,CAACoB,OAAO,CAACyB,OAAO,GAAIP,KAAK,IAAK;QACjCrB,OAAO,CAACqB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CvC,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;IACH,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDvC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMsC,sBAAsB,GAAIH,IAAS,IAAK;IAC5C;IACA,IAAIA,IAAI,CAAC1B,IAAI,EAAE;MACbL,UAAU,CAAC;QACTC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,IAAI,EAAE0B,IAAI,CAAC1B,IAAI;QACfE,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;QACrBO,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE;UACRiC,QAAQ,EAAEZ,IAAI,CAACY,QAAQ;UACvBC,UAAU,EAAEb,IAAI,CAACa,UAAU;UAC3BjC,WAAW,EAAEoB,IAAI,CAACpB,WAAW;UAC7BC,MAAM,EAAEmB,IAAI,CAACnB,MAAM;UACnBC,WAAW,EAAEkB,IAAI,CAAClB;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIkB,IAAI,CAACtB,IAAI,KAAK,OAAO,EAAE;MAChCT,UAAU,CAAC;QACTC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,IAAI,EAAE,qDAAqD;QAC3DE,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;QACrBO,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMT,UAAU,GAAI6C,OAAgB,IAAK;IACvCrD,WAAW,CAACsD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;EACzC,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAO1C,IAAY,EAAEsC,QAAgB,KAAK;IAC5D,IAAI,CAACtC,IAAI,CAAC2C,IAAI,CAAC,CAAC,EAAE;IAElB,MAAMC,WAAoB,GAAG;MAC3BhD,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,IAAI;MACJE,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;MACrBO,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE;QAAEiC;MAAS;IACvB,CAAC;IAED3C,UAAU,CAACiD,WAAW,CAAC;IACvBvD,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,IAAIG,KAAK,CAACoB,OAAO,IAAIpB,KAAK,CAACoB,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;QAChEvB,KAAK,CAACoB,OAAO,CAACiC,IAAI,CAAClB,IAAI,CAACmB,SAAS,CAAC;UAChCN,OAAO,EAAExC,IAAI;UACbsC,QAAQ;UACRS,OAAO,EAAEtD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG;QACjB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACA,MAAMoD,gBAAgB,CAAChD,IAAI,EAAEsC,QAAQ,CAAC;MACxC;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;MAE9C;MACAnC,UAAU,CAAC;QACTC,EAAE,EAAE,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;QAC/BC,IAAI,EAAE,qDAAqD;QAC3DE,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;QACrBO,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM2D,gBAAgB,GAAG,MAAAA,CAAOhD,IAAY,EAAEsC,QAAgB,KAAK;IACjE;IACA,MAAM,IAAIW,OAAO,CAACC,OAAO,IAAIhB,UAAU,CAACgB,OAAO,EAAE,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;IAE9E;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,MAAMC,SAAS,GAAGtD,IAAI,CAACuD,WAAW,CAAC,CAAC;IAEpC,IAAID,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC3DH,QAAQ,GAAG3D,eAAe,CAAC,aAAa,CAAC;IAC3C,CAAC,MAAM,IAAI4D,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,IAAI,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC/FH,QAAQ,GAAG3D,eAAe,CAAC,WAAW,CAAC;IACzC,CAAC,MAAM,IAAI4D,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;MAClGH,QAAQ,GAAG3D,eAAe,CAAC,eAAe,CAAC;IAC7C,CAAC,MAAM,IAAI4D,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;MAClGH,QAAQ,GAAG3D,eAAe,CAAC,YAAY,CAAC;IAC1C,CAAC,MAAM,IAAI4D,SAAS,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1EH,QAAQ,GAAG3D,eAAe,CAAC,kBAAkB,CAAC;IAChD,CAAC,MAAM,IAAI4D,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;MACtEH,QAAQ,GAAG3D,eAAe,CAAC,eAAe,CAAC;IAC7C,CAAC,MAAM;MACL;MACA2D,QAAQ,GAAG,kHAAkH;IAC/H;IAEA1D,UAAU,CAAC;MACTC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,IAAI,EAAEqD,QAAQ;MACdnD,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;MACrBO,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE;QAAEiC;MAAS;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,iBAAiB,GAAG,MAAAA,CAAOzD,IAAY,EAAEsC,QAAgB,KAAK;IAClE,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMhF,KAAK,CAACqF,IAAI,CAAC,GAAGvC,OAAO,CAACC,GAAG,CAACuC,iBAAiB,mBAAmB,EAAE;QACrFnB,OAAO,EAAExC,IAAI;QACbsC,QAAQ;QACRS,OAAO,EAAEtD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG;MACjB,CAAC,CAAC;MAEF,IAAIyD,QAAQ,CAAC3B,IAAI,CAACkC,OAAO,EAAE;QACzBjE,UAAU,CAAC;UACTC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;UACzBC,IAAI,EAAEqD,QAAQ,CAAC3B,IAAI,CAAC2B,QAAQ;UAC5BnD,MAAM,EAAE,IAAI;UACZC,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;UACrBO,IAAI,EAAE,MAAM;UACZC,QAAQ,EAAE;YAAEiC;UAAS;QACvB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAM+B,aAAa,GAAGA,CAAA,KAAM;IAC1B1E,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAM2E,KAAsB,GAAG;IAC7B5E,QAAQ;IACRE,SAAS;IACTsD,WAAW;IACXmB,aAAa;IACbvE;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACsF,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9E,QAAA,EAChCA;EAAQ;IAAAgF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClF,GAAA,CApQWF,YAAyC;EAAA,QAKnCT,OAAO;AAAA;AAAA8F,EAAA,GALbrF,YAAyC;AAAA,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}