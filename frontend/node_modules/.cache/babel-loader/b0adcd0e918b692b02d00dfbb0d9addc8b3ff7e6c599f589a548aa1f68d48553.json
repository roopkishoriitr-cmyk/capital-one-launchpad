{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useRef}from'react';import axios from'axios';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext(undefined);export const useChat=()=>{const context=useContext(ChatContext);if(context===undefined){throw new Error('useChat must be used within a ChatProvider');}return context;};export const ChatProvider=_ref=>{let{children}=_ref;const[messages,setMessages]=useState([]);const[isLoading,setIsLoading]=useState(false);const[isConnected,setIsConnected]=useState(false);const wsRef=useRef(null);const{user}=useAuth();// Mock AI responses for demonstration\nconst mockAIResponses={'crop advice':'आपकी मिट्टी और मौसम के अनुसार, इस सीजन में गेहूं, सरसों या चना की खेती अच्छी रहेगी। मैं आपको विस्तृत जानकारी दे सकता हूं।','loan help':'कृषि ऋण के लिए आप PM-Kisan योजना, KCC कार्ड या बैंक ऋण का लाभ उठा सकते हैं। क्या आप किसी विशेष योजना के बारे में जानना चाहते हैं?','market prices':'आज के मंडी भाव: गेहूं ₹2,100-2,300/quintal, धान ₹1,800-2,000/quintal, मक्का ₹1,500-1,700/quintal। क्या आप किसी विशेष फसल का भाव जानना चाहते हैं?','risk alert':'आपके क्षेत्र में अगले 3 दिनों में बारिश की संभावना है। फसल सुरक्षा के लिए उचित उपाय करें।','farming calendar':'इस महीने के लिए: गेहूं की बुवाई का सही समय है, सरसों की कटाई करें, और नई फसलों की योजना बनाएं।','local schemes':'आपके राज्य में कई सरकारी योजनाएं उपलब्ध हैं: मिट्टी स्वास्थ्य कार्ड, फसल बीमा, और सब्सिडी। क्या आप किसी विशेष योजना के बारे में जानना चाहते हैं?'};useEffect(()=>{// Add welcome message when component mounts\naddMessage({id:Date.now().toString(),text:\"\\u0928\\u092E\\u0938\\u094D\\u0924\\u0947 \".concat((user===null||user===void 0?void 0:user.name)||'किसान',\"! \\u092E\\u0948\\u0902 KrishiMitra \\u0906\\u092A\\u0915\\u0940 \\u0915\\u0948\\u0938\\u0947 \\u092E\\u0926\\u0926 \\u0915\\u0930 \\u0938\\u0915\\u0924\\u093E \\u0939\\u0942\\u0902? \\u092C\\u094B\\u0932\\u0915\\u0930 \\u0905\\u092A\\u0928\\u093E \\u0938\\u0935\\u093E\\u0932 \\u092A\\u0942\\u091B\\u0947\\u0902 - \\u092B\\u0938\\u0932, \\u090B\\u0923, \\u092E\\u0902\\u0921\\u0940 \\u092D\\u093E\\u0935, \\u092E\\u094C\\u0938\\u092E \\u092F\\u093E \\u0938\\u0930\\u0915\\u093E\\u0930\\u0940 \\u092F\\u094B\\u091C\\u0928\\u093E\\u0913\\u0902 \\u0915\\u0947 \\u092C\\u093E\\u0930\\u0947 \\u092E\\u0947\\u0902\\u0964\"),sender:'ai',timestamp:new Date(),type:'system',metadata:{voice_ready:[\"\\u0928\\u092E\\u0938\\u094D\\u0924\\u0947 \".concat((user===null||user===void 0?void 0:user.name)||'किसान',\"! \\u092E\\u0948\\u0902 KrishiMitra \\u0906\\u092A\\u0915\\u0940 \\u0915\\u0948\\u0938\\u0947 \\u092E\\u0926\\u0926 \\u0915\\u0930 \\u0938\\u0915\\u0924\\u093E \\u0939\\u0942\\u0902?\"),\"बोलकर अपना सवाल पूछें - फसल, ऋण, मंडी भाव, मौसम या सरकारी योजनाओं के बारे में।\"],intent:'welcome',suggestions:['फसल की सलाह लें','ऋण की जानकारी लें','मंडी भाव जानें','मौसम की जानकारी लें']}});// Try to connect to WebSocket (optional)\ntry{connectWebSocket();}catch(error){console.log('WebSocket not available, using mock responses');setIsConnected(false);}return()=>{if(wsRef.current){wsRef.current.close();}};},[user]);const connectWebSocket=()=>{try{const wsUrl=process.env.REACT_APP_WS_URL||'ws://localhost:8000/ws';const clientId=(user===null||user===void 0?void 0:user.id)||'anonymous';wsRef.current=new WebSocket(\"\".concat(wsUrl,\"/\").concat(clientId));wsRef.current.onopen=()=>{console.log('WebSocket connected');setIsConnected(true);};wsRef.current.onmessage=event=>{try{const data=JSON.parse(event.data);handleWebSocketMessage(data);}catch(error){console.error('Error parsing WebSocket message:',error);}};wsRef.current.onclose=()=>{console.log('WebSocket disconnected');setIsConnected(false);};wsRef.current.onerror=error=>{console.error('WebSocket error:',error);setIsConnected(false);};}catch(error){console.error('Error connecting to WebSocket:',error);setIsConnected(false);}};const handleWebSocketMessage=data=>{// Handle KrishiMitra response format\nif(data.text){addMessage({id:Date.now().toString(),text:data.text,sender:'ai',timestamp:new Date(),type:'text',metadata:{language:data.language,confidence:data.confidence,voice_ready:data.voice_ready,intent:data.intent,suggestions:data.suggestions}});}else if(data.type==='error'){addMessage({id:Date.now().toString(),text:'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',sender:'ai',timestamp:new Date(),type:'system'});}};const addMessage=message=>{setMessages(prev=>[...prev,message]);};const sendMessage=async(text,language)=>{if(!text.trim())return;const userMessage={id:Date.now().toString(),text,sender:'user',timestamp:new Date(),type:'text',metadata:{language}};addMessage(userMessage);setIsLoading(true);try{// Try WebSocket first if available\nif(wsRef.current&&wsRef.current.readyState===WebSocket.OPEN){wsRef.current.send(JSON.stringify({message:text,language,user_id:user===null||user===void 0?void 0:user.id}));}else{// Fallback to mock responses\nawait sendMockResponse(text,language);}}catch(error){console.error('Error sending message:',error);// Add error message\naddMessage({id:(Date.now()+1).toString(),text:'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',sender:'ai',timestamp:new Date(),type:'system'});}finally{setIsLoading(false);}};const sendMockResponse=async(text,language)=>{// Simulate KrishiMitra processing delay\nawait new Promise(resolve=>setTimeout(resolve,1000+Math.random()*2000));// Generate contextual response\nlet response='';const lowerText=text.toLowerCase();if(lowerText.includes('crop')||lowerText.includes('फसल')){response=mockAIResponses['crop advice'];}else if(lowerText.includes('loan')||lowerText.includes('ऋण')||lowerText.includes('कर्ज')){response=mockAIResponses['loan help'];}else if(lowerText.includes('market')||lowerText.includes('मंडी')||lowerText.includes('भाव')){response=mockAIResponses['market prices'];}else if(lowerText.includes('risk')||lowerText.includes('जोखिम')||lowerText.includes('मौसम')){response=mockAIResponses['risk alert'];}else if(lowerText.includes('calendar')||lowerText.includes('कैलेंडर')){response=mockAIResponses['farming calendar'];}else if(lowerText.includes('scheme')||lowerText.includes('योजना')){response=mockAIResponses['local schemes'];}else{// Generic response\nresponse='आपका सवाल बहुत अच्छा है! मैं आपकी मदद करने की कोशिश करूंगा। क्या आप किसी विशेष विषय के बारे में जानना चाहते हैं?';}addMessage({id:Date.now().toString(),text:response,sender:'ai',timestamp:new Date(),type:'text',metadata:{language}});};const sendMessageViaAPI=async(text,language)=>{try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/chat/send\"),{message:text,language,user_id:user===null||user===void 0?void 0:user.id});if(response.data.success){addMessage({id:Date.now().toString(),text:response.data.response,sender:'ai',timestamp:new Date(),type:'text',metadata:{language}});}}catch(error){console.error('API call failed:',error);throw error;}};const clearMessages=()=>{setMessages([]);};const value={messages,isLoading,sendMessage,clearMessages,isConnected};return/*#__PURE__*/_jsx(ChatContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","useAuth","jsx","_jsx","ChatContext","undefined","useChat","context","Error","ChatProvider","_ref","children","messages","setMessages","isLoading","setIsLoading","isConnected","setIsConnected","wsRef","user","mockAIResponses","addMessage","id","Date","now","toString","text","concat","name","sender","timestamp","type","metadata","voice_ready","intent","suggestions","connectWebSocket","error","console","log","current","close","wsUrl","process","env","REACT_APP_WS_URL","clientId","WebSocket","onopen","onmessage","event","data","JSON","parse","handleWebSocketMessage","onclose","onerror","language","confidence","message","prev","sendMessage","trim","userMessage","readyState","OPEN","send","stringify","user_id","sendMockResponse","Promise","resolve","setTimeout","Math","random","response","lowerText","toLowerCase","includes","sendMessageViaAPI","post","REACT_APP_API_URL","success","clearMessages","value","Provider"],"sources":["/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/ChatContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef, ReactNode } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'ai';\n  timestamp: Date;\n  type: 'text' | 'voice' | 'system';\n  metadata?: {\n    language?: string;\n    confidence?: number;\n    audioUrl?: string;\n    voice_ready?: string[];\n    intent?: string;\n    suggestions?: string[];\n  };\n}\n\ninterface ChatContextType {\n  messages: Message[];\n  isLoading: boolean;\n  sendMessage: (text: string, language: string) => Promise<void>;\n  clearMessages: () => void;\n  isConnected: boolean;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport const ChatProvider: React.FC<ChatProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const wsRef = useRef<WebSocket | null>(null);\n  const { user } = useAuth();\n\n  // Mock AI responses for demonstration\n  const mockAIResponses = {\n    'crop advice': 'आपकी मिट्टी और मौसम के अनुसार, इस सीजन में गेहूं, सरसों या चना की खेती अच्छी रहेगी। मैं आपको विस्तृत जानकारी दे सकता हूं।',\n    'loan help': 'कृषि ऋण के लिए आप PM-Kisan योजना, KCC कार्ड या बैंक ऋण का लाभ उठा सकते हैं। क्या आप किसी विशेष योजना के बारे में जानना चाहते हैं?',\n    'market prices': 'आज के मंडी भाव: गेहूं ₹2,100-2,300/quintal, धान ₹1,800-2,000/quintal, मक्का ₹1,500-1,700/quintal। क्या आप किसी विशेष फसल का भाव जानना चाहते हैं?',\n    'risk alert': 'आपके क्षेत्र में अगले 3 दिनों में बारिश की संभावना है। फसल सुरक्षा के लिए उचित उपाय करें।',\n    'farming calendar': 'इस महीने के लिए: गेहूं की बुवाई का सही समय है, सरसों की कटाई करें, और नई फसलों की योजना बनाएं।',\n    'local schemes': 'आपके राज्य में कई सरकारी योजनाएं उपलब्ध हैं: मिट्टी स्वास्थ्य कार्ड, फसल बीमा, और सब्सिडी। क्या आप किसी विशेष योजना के बारे में जानना चाहते हैं?'\n  };\n\n  useEffect(() => {\n    // Add welcome message when component mounts\n    addMessage({\n      id: Date.now().toString(),\n      text: `नमस्ते ${user?.name || 'किसान'}! मैं KrishiMitra आपकी कैसे मदद कर सकता हूं? बोलकर अपना सवाल पूछें - फसल, ऋण, मंडी भाव, मौसम या सरकारी योजनाओं के बारे में।`,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'system',\n      metadata: {\n        voice_ready: [`नमस्ते ${user?.name || 'किसान'}! मैं KrishiMitra आपकी कैसे मदद कर सकता हूं?`, \"बोलकर अपना सवाल पूछें - फसल, ऋण, मंडी भाव, मौसम या सरकारी योजनाओं के बारे में।\"],\n        intent: 'welcome',\n        suggestions: ['फसल की सलाह लें', 'ऋण की जानकारी लें', 'मंडी भाव जानें', 'मौसम की जानकारी लें']\n      }\n    });\n\n    // Try to connect to WebSocket (optional)\n    try {\n      connectWebSocket();\n    } catch (error) {\n      console.log('WebSocket not available, using mock responses');\n      setIsConnected(false);\n    }\n\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [user]);\n\n  const connectWebSocket = () => {\n    try {\n      const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:8000/ws';\n      const clientId = user?.id || 'anonymous';\n      \n      wsRef.current = new WebSocket(`${wsUrl}/${clientId}`);\n      \n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n      };\n      \n      wsRef.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n      };\n      \n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Error connecting to WebSocket:', error);\n      setIsConnected(false);\n    }\n  };\n\n  const handleWebSocketMessage = (data: any) => {\n    // Handle KrishiMitra response format\n    if (data.text) {\n      addMessage({\n        id: Date.now().toString(),\n        text: data.text,\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'text',\n        metadata: {\n          language: data.language,\n          confidence: data.confidence,\n          voice_ready: data.voice_ready,\n          intent: data.intent,\n          suggestions: data.suggestions\n        }\n      });\n    } else if (data.type === 'error') {\n      addMessage({\n        id: Date.now().toString(),\n        text: 'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    }\n  };\n\n  const addMessage = (message: Message) => {\n    setMessages(prev => [...prev, message]);\n  };\n\n  const sendMessage = async (text: string, language: string) => {\n    if (!text.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: { language }\n    };\n\n    addMessage(userMessage);\n    setIsLoading(true);\n\n    try {\n      // Try WebSocket first if available\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          message: text,\n          language,\n          user_id: user?.id\n        }));\n      } else {\n        // Fallback to mock responses\n        await sendMockResponse(text, language);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message\n      addMessage({\n        id: (Date.now() + 1).toString(),\n        text: 'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sendMockResponse = async (text: string, language: string) => {\n    // Simulate KrishiMitra processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n    \n    // Generate contextual response\n    let response = '';\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crop') || lowerText.includes('फसल')) {\n      response = mockAIResponses['crop advice'];\n    } else if (lowerText.includes('loan') || lowerText.includes('ऋण') || lowerText.includes('कर्ज')) {\n      response = mockAIResponses['loan help'];\n    } else if (lowerText.includes('market') || lowerText.includes('मंडी') || lowerText.includes('भाव')) {\n      response = mockAIResponses['market prices'];\n    } else if (lowerText.includes('risk') || lowerText.includes('जोखिम') || lowerText.includes('मौसम')) {\n      response = mockAIResponses['risk alert'];\n    } else if (lowerText.includes('calendar') || lowerText.includes('कैलेंडर')) {\n      response = mockAIResponses['farming calendar'];\n    } else if (lowerText.includes('scheme') || lowerText.includes('योजना')) {\n      response = mockAIResponses['local schemes'];\n    } else {\n      // Generic response\n      response = 'आपका सवाल बहुत अच्छा है! मैं आपकी मदद करने की कोशिश करूंगा। क्या आप किसी विशेष विषय के बारे में जानना चाहते हैं?';\n    }\n    \n    addMessage({\n      id: Date.now().toString(),\n      text: response,\n      sender: 'ai',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: { language }\n    });\n  };\n\n  const sendMessageViaAPI = async (text: string, language: string) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/chat/send`, {\n        message: text,\n        language,\n        user_id: user?.id\n      });\n      \n      if (response.data.success) {\n        addMessage({\n          id: Date.now().toString(),\n          text: response.data.response,\n          sender: 'ai',\n          timestamp: new Date(),\n          type: 'text',\n          metadata: { language }\n        });\n      }\n    } catch (error) {\n      console.error('API call failed:', error);\n      throw error;\n    }\n  };\n\n  const clearMessages = () => {\n    setMessages([]);\n  };\n\n  const value: ChatContextType = {\n    messages,\n    isLoading,\n    sendMessage,\n    clearMessages,\n    isConnected\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}