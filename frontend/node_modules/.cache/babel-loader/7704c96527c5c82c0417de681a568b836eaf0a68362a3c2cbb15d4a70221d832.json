{"ast":null,"code":"var _jsxFileName = \"/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored user data on app load\n    const storedUser = localStorage.getItem('krishisampann_user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('krishisampann_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (phoneNumber, name, language, state, district, village, landArea) => {\n    try {\n      setIsLoading(true);\n\n      // Check if user exists\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/users/phone/${phoneNumber}`);\n      if (response.data) {\n        // User exists, update with new data\n        const updatedUser = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${response.data.id}`, {\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        setUser(updatedUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser.data));\n      } else {\n        // User doesn't exist, create new user\n        const newUser = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, {\n          phone_number: phoneNumber,\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        setUser(newUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(newUser.data));\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, userData);\n      setUser(response.data);\n      localStorage.setItem('krishisampann_user', JSON.stringify(response.data));\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const updateUser = async userData => {\n    if (!user) throw new Error('No user logged in');\n    try {\n      setIsLoading(true);\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${user.id}`, userData);\n      const updatedUser = {\n        ...user,\n        ...response.data\n      };\n      setUser(updatedUser);\n      localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser));\n    } catch (error) {\n      console.error('Update user error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('krishisampann_user');\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    register,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","storedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","phoneNumber","name","language","state","district","village","landArea","response","get","process","env","REACT_APP_API_URL","data","updatedUser","put","id","land_area","setItem","stringify","newUser","post","phone_number","register","updateUser","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  phone_number: string;\n  name: string;\n  language: string;\n  state: string;\n  district: string;\n  village: string;\n  land_area: number;\n  created_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (phoneNumber: string, name: string, language: string, state: string, district: string, village: string, landArea: number) => Promise<void>;\n  logout: () => void;\n  register: (userData: Omit<User, 'id' | 'created_at'>) => Promise<void>;\n  updateUser: (userData: Partial<User>) => Promise<void>;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored user data on app load\n    const storedUser = localStorage.getItem('krishisampann_user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('krishisampann_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (\n    phoneNumber: string,\n    name: string,\n    language: string,\n    state: string,\n    district: string,\n    village: string,\n    landArea: number\n  ) => {\n    try {\n      setIsLoading(true);\n      \n      // Check if user exists\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/users/phone/${phoneNumber}`);\n      \n      if (response.data) {\n        // User exists, update with new data\n        const updatedUser = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${response.data.id}`, {\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        \n        setUser(updatedUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser.data));\n      } else {\n        // User doesn't exist, create new user\n        const newUser = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, {\n          phone_number: phoneNumber,\n          name,\n          language,\n          state,\n          district,\n          village,\n          land_area: landArea\n        });\n        \n        setUser(newUser.data);\n        localStorage.setItem('krishisampann_user', JSON.stringify(newUser.data));\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: Omit<User, 'id' | 'created_at'>) => {\n    try {\n      setIsLoading(true);\n      \n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/users/register`, userData);\n      \n      setUser(response.data);\n      localStorage.setItem('krishisampann_user', JSON.stringify(response.data));\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateUser = async (userData: Partial<User>) => {\n    if (!user) throw new Error('No user logged in');\n    \n    try {\n      setIsLoading(true);\n      \n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/api/v1/users/${user.id}`, userData);\n      \n      const updatedUser = { ...user, ...response.data };\n      setUser(updatedUser);\n      localStorage.setItem('krishisampann_user', JSON.stringify(updatedUser));\n    } catch (error) {\n      console.error('Update user error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('krishisampann_user');\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    register,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}