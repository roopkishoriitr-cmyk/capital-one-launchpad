{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useRef}from'react';import axios from'axios';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext(undefined);export const useChat=()=>{const context=useContext(ChatContext);if(context===undefined){throw new Error('useChat must be used within a ChatProvider');}return context;};export const ChatProvider=_ref=>{let{children}=_ref;const[messages,setMessages]=useState([]);const[isLoading,setIsLoading]=useState(false);const[isConnected,setIsConnected]=useState(false);const wsRef=useRef(null);const{user}=useAuth();useEffect(()=>{// Initialize WebSocket connection\nif(user){connectWebSocket();}return()=>{if(wsRef.current){wsRef.current.close();}};},[user]);const connectWebSocket=()=>{try{const wsUrl=process.env.REACT_APP_WS_URL||'ws://localhost:8000/ws';const clientId=(user===null||user===void 0?void 0:user.id)||'anonymous';wsRef.current=new WebSocket(\"\".concat(wsUrl,\"/\").concat(clientId));wsRef.current.onopen=()=>{console.log('WebSocket connected');setIsConnected(true);// Add welcome message\naddMessage({id:Date.now().toString(),text:\"\\u0928\\u092E\\u0938\\u094D\\u0924\\u0947 \".concat((user===null||user===void 0?void 0:user.name)||'किसान',\"! \\u092E\\u0948\\u0902 KrishiSampann \\u0906\\u092A\\u0915\\u0940 \\u0915\\u0948\\u0938\\u0947 \\u092E\\u0926\\u0926 \\u0915\\u0930 \\u0938\\u0915\\u0924\\u093E \\u0939\\u0942\\u0902? \\u0906\\u092A \\u092E\\u0941\\u091D\\u0938\\u0947 \\u092B\\u0938\\u0932, \\u090B\\u0923, \\u092E\\u0902\\u0921\\u0940 \\u092D\\u093E\\u0935, \\u092E\\u094C\\u0938\\u092E \\u092F\\u093E \\u0938\\u0930\\u0915\\u093E\\u0930\\u0940 \\u092F\\u094B\\u091C\\u0928\\u093E\\u0913\\u0902 \\u0915\\u0947 \\u092C\\u093E\\u0930\\u0947 \\u092E\\u0947\\u0902 \\u092A\\u0942\\u091B \\u0938\\u0915\\u0924\\u0947 \\u0939\\u0948\\u0902\\u0964\"),sender:'ai',timestamp:new Date(),type:'system'});};wsRef.current.onmessage=event=>{try{const data=JSON.parse(event.data);handleWebSocketMessage(data);}catch(error){console.error('Error parsing WebSocket message:',error);}};wsRef.current.onclose=()=>{console.log('WebSocket disconnected');setIsConnected(false);};wsRef.current.onerror=error=>{console.error('WebSocket error:',error);setIsConnected(false);};}catch(error){console.error('Error connecting to WebSocket:',error);setIsConnected(false);}};const handleWebSocketMessage=data=>{if(data.type==='message'){addMessage({id:Date.now().toString(),text:data.content,sender:'ai',timestamp:new Date(),type:'text',metadata:{language:data.language,audioUrl:data.audio_url}});}else if(data.type==='error'){addMessage({id:Date.now().toString(),text:'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',sender:'ai',timestamp:new Date(),type:'system'});}};const addMessage=message=>{setMessages(prev=>[...prev,message]);};const sendMessage=async(text,language)=>{if(!text.trim())return;const userMessage={id:Date.now().toString(),text,sender:'user',timestamp:new Date(),type:'text',metadata:{language}};addMessage(userMessage);setIsLoading(true);try{// Try WebSocket first\nif(wsRef.current&&wsRef.current.readyState===WebSocket.OPEN){wsRef.current.send(JSON.stringify({message:text,language,user_id:user===null||user===void 0?void 0:user.id}));}else{// Fallback to HTTP API\nawait sendMessageViaAPI(text,language);}}catch(error){console.error('Error sending message:',error);// Add error message\naddMessage({id:(Date.now()+1).toString(),text:'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',sender:'ai',timestamp:new Date(),type:'system'});}finally{setIsLoading(false);}};const sendMessageViaAPI=async(text,language)=>{try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/v1/chat/send\"),{message:text,language,user_id:user===null||user===void 0?void 0:user.id});const aiMessage={id:Date.now().toString(),text:response.data.response,sender:'ai',timestamp:new Date(),type:'text',metadata:{language:response.data.language,audioUrl:response.data.audio_url}};addMessage(aiMessage);}catch(error){console.error('API error:',error);throw error;}};const clearMessages=()=>{setMessages([]);};const value={messages,isLoading,sendMessage,clearMessages,isConnected};return/*#__PURE__*/_jsx(ChatContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","useAuth","jsx","_jsx","ChatContext","undefined","useChat","context","Error","ChatProvider","_ref","children","messages","setMessages","isLoading","setIsLoading","isConnected","setIsConnected","wsRef","user","connectWebSocket","current","close","wsUrl","process","env","REACT_APP_WS_URL","clientId","id","WebSocket","concat","onopen","console","log","addMessage","Date","now","toString","text","name","sender","timestamp","type","onmessage","event","data","JSON","parse","handleWebSocketMessage","error","onclose","onerror","content","metadata","language","audioUrl","audio_url","message","prev","sendMessage","trim","userMessage","readyState","OPEN","send","stringify","user_id","sendMessageViaAPI","response","post","REACT_APP_API_URL","aiMessage","clearMessages","value","Provider"],"sources":["/Users/roopkishor.singh/Downloads/capital-one-hackathon/frontend/src/contexts/ChatContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef, ReactNode } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'ai';\n  timestamp: Date;\n  type: 'text' | 'voice' | 'system';\n  metadata?: {\n    language?: string;\n    confidence?: number;\n    audioUrl?: string;\n  };\n}\n\ninterface ChatContextType {\n  messages: Message[];\n  isLoading: boolean;\n  sendMessage: (text: string, language: string) => Promise<void>;\n  clearMessages: () => void;\n  isConnected: boolean;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport const ChatProvider: React.FC<ChatProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const wsRef = useRef<WebSocket | null>(null);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    if (user) {\n      connectWebSocket();\n    }\n\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [user]);\n\n  const connectWebSocket = () => {\n    try {\n      const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:8000/ws';\n      const clientId = user?.id || 'anonymous';\n      \n      wsRef.current = new WebSocket(`${wsUrl}/${clientId}`);\n      \n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        \n        // Add welcome message\n        addMessage({\n          id: Date.now().toString(),\n          text: `नमस्ते ${user?.name || 'किसान'}! मैं KrishiSampann आपकी कैसे मदद कर सकता हूं? आप मुझसे फसल, ऋण, मंडी भाव, मौसम या सरकारी योजनाओं के बारे में पूछ सकते हैं।`,\n          sender: 'ai',\n          timestamp: new Date(),\n          type: 'system'\n        });\n      };\n      \n      wsRef.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n      };\n      \n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Error connecting to WebSocket:', error);\n      setIsConnected(false);\n    }\n  };\n\n  const handleWebSocketMessage = (data: any) => {\n    if (data.type === 'message') {\n      addMessage({\n        id: Date.now().toString(),\n        text: data.content,\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'text',\n        metadata: {\n          language: data.language,\n          audioUrl: data.audio_url\n        }\n      });\n    } else if (data.type === 'error') {\n      addMessage({\n        id: Date.now().toString(),\n        text: 'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    }\n  };\n\n  const addMessage = (message: Message) => {\n    setMessages(prev => [...prev, message]);\n  };\n\n  const sendMessage = async (text: string, language: string) => {\n    if (!text.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text',\n      metadata: { language }\n    };\n\n    addMessage(userMessage);\n    setIsLoading(true);\n\n    try {\n      // Try WebSocket first\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          message: text,\n          language,\n          user_id: user?.id\n        }));\n      } else {\n        // Fallback to HTTP API\n        await sendMessageViaAPI(text, language);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message\n      addMessage({\n        id: (Date.now() + 1).toString(),\n        text: 'माफ़ करें, कुछ गलत हो गया। कृपया फिर से कोशिश करें।',\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'system'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sendMessageViaAPI = async (text: string, language: string) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/chat/send`, {\n        message: text,\n        language,\n        user_id: user?.id\n      });\n\n      const aiMessage: Message = {\n        id: Date.now().toString(),\n        text: response.data.response,\n        sender: 'ai',\n        timestamp: new Date(),\n        type: 'text',\n        metadata: {\n          language: response.data.language,\n          audioUrl: response.data.audio_url\n        }\n      };\n\n      addMessage(aiMessage);\n    } catch (error) {\n      console.error('API error:', error);\n      throw error;\n    }\n  };\n\n  const clearMessages = () => {\n    setMessages([]);\n  };\n\n  const value: ChatContextType = {\n    messages,\n    isLoading,\n    sendMessage,\n    clearMessages,\n    isConnected\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}